servers = (
  { address = "irc.ubuntu.com"; chatnet = "Ubuntu"; port = "8001"; },
  { address = "eu.irc6.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "open.ircnet.net"; chatnet = "IRCnet"; port = "6667"; },
  { address = "irc.efnet.org"; chatnet = "EFNet"; port = "6667"; },
  {
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  {
    address = "irc.quakenet.org";
    chatnet = "QuakeNet";
    port = "6667";
  },
  { address = "irc.oftc.net"; chatnet = "OFTC"; port = "6667"; },
  {
    address = "irc.gamesurge.net";
    chatnet = "GameSurge";
    port = "6667";
  },
  { address = "irc.webchat.org"; chatnet = "WebChat"; port = "6667"; },
  { address = "irc.rizon.net"; chatnet = "Rizon"; port = "6667"; },
  { address = "irc.link-net.org"; chatnet = "LinkNet"; port = "6667"; },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
  {
    address = "chat.freenode.net";
    chatnet = "freenode";
    port = "6697";
    use_ssl = "yes";
    autoconnect = "yes";
  },
  {
    address = "zinc.sitr.us";
    chatnet = "zinc";
    port = "6697";
    use_ssl = "yes";
  },
  { address = "localhost"; chatnet = "BitlBee"; port = "6667"; }
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  OFTC = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  GameSurge = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  WebChat = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  Rizon = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  LinkNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  Ubuntu = { type = "IRC"; };
  freenode = { type = "IRC"; };
  BitlBee = {
    type = "IRC";
    autosendcmd = "/msg &bitlbee identify Byactyac1";
  };
  zinc = { type = "IRC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },

  { name = "#pdxtech"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#pdxfunc"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#pdxjs"; chatnet = "freenode"; autojoin = "Yes"; },
  { name = "#xmonad"; chatnet = "freenode"; autojoin = "Yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if command -v bc >/dev/null 2>&1\\; then printf '%s=' '$*'\\; echo '$*' | bc -l\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  UNSET = "set -clear";
  RESET = "set -default";
  znc = "quote znc";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    ## all of these treated specially, they're only displayed when needed
    #lag = "{sb Lag: $0-}";
    #act = "{sb Act: $0-}";
    #more = "-- more --";

    # Solarized
    lag = "{sb Lag: %m$0-%n}";
    act = "{sb Act: $0-}";
    more = "%k%3-- more --%n";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        join_notice = { };
        typing_notice = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Jesse Hallett";
    user_name = "jesse";
    nick = "hallettj";
  };
  "fe-text" = { actlist_sort = "refnum"; };
  "fe-common/core" = {
    # Solarized
    theme = "solarized-universal";
    hilight_color = "= %R";

    bell_beeps = "ON";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
    beep_when_window_active = "ON";
    beep_when_away = "ON";

    autolog = "yes";
  };
  "irc/core" = { alternate_nick = "hallettj_"; };
  #"perl/core/scripts" = { awl_display_key = "$Q|$H$C$S"; };
  "perl/core/scripts" = {
    ### For Solarized adv_windowlist.pl script
    awl_display_key_active = "%k%2$Q:$C%n";
    awl_display_nokey_active = "%k%2$N:$C%n";
    awl_display_key = "$Q:$H$C$S";
    awl_display_nokey = "$N:$H$C$S";

    ### For Solarized trackbar.pl script
    trackbar_style = "%B";

    bitlbee_send_typing = "yes";
    pushover_token = "ubPLqjt5ELgNRD1DcV6LubjDMsBLRz";
    pushover_apptoken = "av3eNwUKDDvYfGgwNULGCzjsyL7nYC";
    pushover_sound = "pushover";
    pushover_debug = "no";
    pushover_ignorechannels = "&bitlbee";

    autoaway_message = "I'm not at my keyboard right now.";
  };
};
hilights = (
  { text = "hallettj"; color = "%M"; nick = "yes"; word = "yes"; },
  { text = "hallettj_"; color = "%M"; nick = "yes"; word = "yes"; },
  { text = "Jesse"; color = "%M"; nick = "no"; word = "yes"; },
  { text = "Hallett"; color = "%M"; nick = "no"; word = "yes"; }
);
logs = { };
keyboard = (
  { key = "^P"; id = "command"; data = "scrollback goto -25"; },
  { key = "^N"; id = "command"; data = "scrollback goto +25"; },

  # I rebind the default window-changing shortcuts second so that the
  # titles in my window list continue to be labeled with numbers.
  # Without this part my windows are labeled with symbols instead.
  { key = "meta-1"; id = "change_window"; data = "1"; },
  { key = "meta-2"; id = "change_window"; data = "2"; },
  { key = "meta-3"; id = "change_window"; data = "3"; },
  { key = "meta-4"; id = "change_window"; data = "4"; },
  { key = "meta-5"; id = "change_window"; data = "5"; },
  { key = "meta-6"; id = "change_window"; data = "6"; },
  { key = "meta-7"; id = "change_window"; data = "7"; },
  { key = "meta-8"; id = "change_window"; data = "8"; },
  { key = "meta-9"; id = "change_window"; data = "9"; }
);
