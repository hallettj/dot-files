# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -h -c "#{pane_current_path}"
bind S split-window -v -c "#{pane_current_path}"

# open vim in a new split
bind e split-window -h -c "#{pane_current_path}" sensible-editor

# shortcuts for common git operations
bind G split-window -h -c "#{pane_current_path}" 'GIT_PAGER="less -+F" git lg'
bind D split-window -h -c "#{pane_current_path}" 'GIT_PAGER="less -+F" git diff'
bind C split-window -h -c "#{pane_current_path}" 'GIT_PAGER="less -+F" git diff --cached'
bind A split-window -h -c "#{pane_current_path}" 'git add -p'

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Zoom other pane in the current window
# bind F4 resize-pane -Z -t!
bind -n F4 run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys F4) || tmux resize-pane -Z -t!"
# bind -n F4 run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$' && tmux send-keys F4) || (tmux list-panes -F '#D #{pane_current_command}' | grep -iE '\bn?vim(diff)?$' | cut -d' ' -f1 | head -n1 | xargs -r tmux resize-pane -Z -t)"

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind , to command-prompt, like in my vim config
bind , command-prompt
bind : command-prompt -I '#W' "rename-window '%%'"

# vi-style controls for copy mode
setw -g mode-keys vi

bind m select-window -t :1
bind w select-window -t :2
bind v select-window -t :3
bind h select-window -t :4
bind t select-window -t :5
bind n select-window -t :6
bind g select-window -t :7
# bind c select-window -t :8
# bind r select-window -t :9

bind c new-window -c "#{pane_current_path}"

# custom status bar
set -g status-left ""
set -g status-right "#S — #H"

unbind C-b
set -g prefix F12
bind F12 send-prefix

# More Vim-style bindings for copy-mode
unbind-key -T copy-mode-vi v
bind-key Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Shortcuts for getting into copy-mode
bind PPage copy-mode -u
bind NPage copy-mode

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xsel --input --clipboard > /dev/null"
#Copy CLIPBOARD to tmux paste buffer, paste tmux paste buffer, pop selection off of the buffer stack
bind C-v run "tmux set-buffer -- \"$(xsel --output --clipboard)\"; tmux paste-buffer; tmux delete-buffer"

# shortcut for reloading configuration from this file
bind-key r source-file ~/.tmux.conf

# starts window numbering at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

set -g allow-rename on # Allow shell to dynamically update window name
set -g automatic-rename on # Update window name based on what shell specifies
set -g set-titles on
set -g set-titles-string "#S — #{window_name} #{?session_alerts, !! #{session_alerts},}"

# overrides default behavior, which limits screen size to the size of
# the smallest screen that is connected to a tmux session
setw -g aggressive-resize on

# Skips delay after command keys like <prefix> or <meta>
set -g escape-time 0

set -g default-terminal "xterm-kitty"

# Keeps tmux session connected to ssh agent across login sessions
set-environment -g SSH_AUTH_SOCK "$HOME/.ssh/ssh_auth_sock"

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-style fg=yellow,bg=black # fg=yellow,bg=base02

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default # fg=orange

# pane border
set-option -g pane-border-style fg=black # base02
set-option -g pane-active-border-style fg=brightgreen #base01

# message text
set-option -g message-style fg=brightred,bg=black # fg=orange,bg=base02

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# Set action on window bell. any means a bell in any window linked to a
# session causes a bell in the current window of that session, none means
# all bells are ignored and current means only bell in windows other than
# the current window are ignored.
set-option -g bell-action any
set-option -g visual-activity on
set-option -g visual-bell on

# List of plugins
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'RTBHOUSE/tmux-picker'

# # Customize key binding for tmux-picker
setenv -g PICKER_KEY 'F'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '/usr/share/tmux-plugin-manager/tpm'
